import org.example.ops.Solution8;import org.junit.Test;import static org.junit.Assert.*;// 测试类考虑的很细致，写的很好！public class L2022211889_8_Test {    /**     * testing strategy:     * 对计算岛屿的grid进行等价类划分：     * 不合格输入：空grid     * 只有一个元素的grid     * 包含不成矩阵形式的grid     * 环形岛屿     * 标准输入     *      * 测试各用例中的代表是否得到正确的岛屿数，介于本项目不是标准的java项目，因此仅适用主类测试     */    static Solution8 s = new Solution8();    @Test    public void testNum(){        char[][] grid1 = {};        char[][] grid2 = {{'1'}};        char[][] grid3 = {                {'1','1','1','1','0'},                {'1','1','0','1','0'},                {'1','1','0','0','0'},                {'0','0','0','1','1'}        };        char[][] grid4 = {                {'1','1','1','1','1','1'},                {'1','0','0','0','0','1'},                {'1','0','1','0','0','1'},                {'1','0','0','1','0','1'},                {'1','0','0','0','0','1'},                {'1','1','1','1','1','1'},        };        char[][] grid5 =  {            {'1','1','0','0','0'},            {'1','1','0','0','0'},            {'0','0','1','0','0'},            {'0','0','0','1','1'}        };        assertEquals(0,s.numIslands(grid1));        assertEquals(1,s.numIslands(grid2));        assertEquals(2,s.numIslands(grid3));        assertEquals(3,s.numIslands(grid4));        assertEquals(3,s.numIslands(grid5));    }}